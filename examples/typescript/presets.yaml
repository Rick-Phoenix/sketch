# yaml-language-server: $schema=../../schemas/latest.json

out_dir: ../../sketch/tests/output/presets

# ANCHOR: all
templates:
  dockerfile: |
    FROM node:23-alpine

    COPY . .
    EXPOSE {{ docker_dev_port | default(value=5173) }}
    CMD ["npm", "run", "dev"]

  compose_file: |
    services:
      myservice:
        build: .
        restart: unless-stopped

# Gitignore presets
gitignore_presets:
  # Can be a string
  base:
    content: |
      *.env
      dist
  # Or a list of strings
  ts:
    extends:
      - base
    content:
      - "*.tsBuildInfo"
      - node_modules

# Pre-commit presets
pre_commit_presets:
  # Commonly used repo
  base:
    repos:
      - repo: https://github.com/gitleaks/gitleaks
        rev: v8.28.0
        hooks:
          - id: gitleaks

  # Hooks specific to typescript projects
  typescript:
    # Extending the base preset
    extends:
      - base
    repos:
      - repo: local
        hooks:
          - id: oxlint
            name: oxlint
            entry: oxlint
            language: system
            files: '\.svelte$|\.js$|\.ts$'
            types: [file]

# Git presets
git_presets:
  ts_package:
    # Selecting a preset
    gitignore: ts
    pre_commit: typescript

    # Templates that will be generated with this preset
    # in the new repo's root
    with_templates:
      - template: dockerfile
        output: Dockerfile

# Templating presets
templating_presets:
  # All the files in this group will be generated together
  docker:
    # Relative paths are joined with `out_dir`
    - output: Dockerfile
      template: dockerfile
      # Optional local context variables
      context:
        docker_dev_port: 5173
    - output: compose.yaml
      template: compose_file

typescript:
  no_default_deps: true

  # `package.json` presets
  package_json_presets:
    # Defining some reusable fields such as some common scripts and dependencies
    frontend:
      description: I am the base preset
      scripts:
        build: vite build
        dev: vite dev
      devDependencies:
        tailwindcss: "*"
        vite: "*"

    svelte_frontend:
      extends: ["frontend"]
      # Adding new fields
      license: MIT
      # Overriding others
      description: I am the frontend preset
      # And merging dependencies
      devDependencies:
        svelte: "*"

  # Tsconfig presets
  tsconfig_presets:
    base:
      references:
        - path: /some/path
      include:
        - src
      compilerOptions:
        noEmit: true
        verbatimModuleSyntax: true

    extended:
      # Renamed to avoid conflict with the `extends` field
      extend_presets:
        - base
      # Unlike in real tsconfigs with `extends`, references are merged here,
      # and so are all other collections such as `files` or `include`.
      references:
        - path: /other/path
      include:
        - tests
      compilerOptions:
        # Whereas other fields are overwritten
        noEmit: false

  # Oxlint presets
  oxlint_presets:
    base:
      ignorePatterns:
        - "**/node_modules/**"

    extended:
      # Renamed to avoid collisions with oxlint's own `extends` field
      extend_presets:
        - base
      ignorePatterns:
        - .cache

  # Package presets
  package_presets:
    example:
      name: example
      dir: packages/presets_example

      # For every preset, we can either refer to them
      # by their id...
      package_json: svelte_frontend

      # ...or we can inline a preset definition
      oxlint:
        extend_presets:
          - extended
        ignorePatterns:
          - .output

      # We can define one or many tsconfig files
      ts_config:
        # Can be omitted, would default to `tsconfig.json`
        - output: tsconfig.json
          config:
            # Once again creating a new config here with some extras
            extend_presets:
              - extended
            include:
              - scripts

      # Templates to generate in the new package's root
      with_templates:
        - template: compose_file
          output: compose.yaml

      # ANCHOR_END: all
      vitest: false
