# yaml-language-server: $schema=../../schemas/latest.json

out_dir:
  ../../sketch/tests/output/ts_examples

  # ANCHOR: all
typescript:
  package_presets:
    frontend:
      # The name of the package. If this is unset and `dir` is set,
      # it will use the last segment from it.
      name: "@myproject/frontend"

      # The package.json config for this package. Can be a preset id
      # or a literal configuration.
      package_json:
        devDependencies:
          tailwindcss: "^4.0.0"

      # The directory for this package, starting from the `out_dir`
      dir: packages/frontend

      # The kind of package to generate. Only relevant if you use
      # default tsconfigs.
      kind: library

      # Generates an oxlint config file in the root.
      # Can be set to true/false to use defaults or to disable it, or to
      # a literal configuration.
      oxlint: false

      # Create a vitest setup.
      # Can be set to true to use defaults (which are as below).
      vitest:
        # Where the config file should be generated, starting from
        # the root of the package.
        # It defaults to the value of `tests_dir`
        out_dir: null

        # The directory to use for tests
        tests_dir: tests

        # The directory containing the setup files for tests.
        # (starting from tests_dir)
        setup_dir: setup

        # Can use a list of plugins which will be set up in the config file
        plugins: []
      # ANCHOR_END: all

      # Use the default tsconfigs
      ts_config: null
      # ANCHOR: template_example
      # Inside the package preset configuration
      with_templates:
        - output: src/schemas/index.ts
          # This can be a template defined in the config file
          # or file path inside templates_dir
          template: schemas

templates:
  schemas: |
    import z from "zod";
    import { sharedSchemas } from "{{ schemas_package }}";

vars:
  schemas_package: "@myproject/schemas"
  # ANCHOR_END: template_example
