name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  prepare_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        run: |
          VERSION="${{github.ref_name}}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          MAJOR=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\1/p')
          MINOR=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\2/p')
          PATCH=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\3/p')
          if [ -z "$MAJOR" ] || [ -z "$MINOR" ] || [ -z "$PATCH" ]; then
          echo "::error::Could not parse major.minor.patch from tag: $VERSION. Tag must be like vX.Y.Z"
          exit 1
          fi

          echo "Parsed: Version=$VERSION Major=$MAJOR, Minor=$MINOR, Patch=$PATCH"

          echo "DOCS_DEST_DIR=v$MAJOR.$MINOR" >> $GITHUB_ENV

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: "latest"

      - run: mdbook build docs

      - name: Deploy latest docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          force_orphan: false

      - name: Deploy versioned docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          destination_dir: ${{ env.DOCS_DEST_DIR }}
          force_orphan: false

  create_release:
    needs: prepare_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0

      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          branch: main
          token: ${{ secrets.GITHUB_TOKEN }}

  upload_assets:
    needs: create_release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-13
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: sketch
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
