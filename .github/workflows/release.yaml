name: Release

on:
  push:
    tags:
      - "*"

jobs:
  prepare_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        run: |
          VERSION="${{github.ref_name}}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          MAJOR=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\1/p')
          MINOR=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\2/p')
          PATCH=$(echo "$VERSION" | sed -n 's/^v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\).*$/\3/p')
          if [ -z "$MAJOR" ] || [ -z "$MINOR" ] || [ -z "$PATCH" ]; then
          echo "::error::Could not parse major.minor.patch from tag: $VERSION. Tag must be like vX.Y.Z"
          exit 1
          fi

          echo "Parsed: Version=$VERSION Major=$MAJOR, Minor=$MINOR, Patch=$PATCH"

          echo "DOCS_DEST_DIR=v$MAJOR.$MINOR" >> $GITHUB_ENV

      - uses: dtolnay/rust-toolchain@stable

      - name: Run tests
        run: cargo test --all-features

      - name: Generate JSON schema
        run: cargo run --bin json-schema ${{ env.VERSION }}

      - name: Generate changelog
        uses: orhun/git-cliff-action@v4
        with:
          args: --tag ${{ env.VERSION }}
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Check changelog diff
        run: |
          if git diff --exit-code CHANGELOG.md; then
            echo "::notice::CHANGELOG.md is up-to-date, no changes to commit"
            echo "CHANGELOG_CHANGED=false" >> $GITHUB_ENV
          else
            echo "::notice::CHANGELOG.md updated."
            echo "CHANGELOG_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Commit and push changelog (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add CHANGELOG.md
          git commit -m "chore: Update changelog"
          git push origin HEAD:test

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: "latest"

      - run: mdbook build docs

      - name: Deploy latest docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          force_orphan: false

      - name: Deploy versioned docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          destination_dir: ${{ env.DOCS_DEST_DIR }}
          force_orphan: false

  create_release:
    needs: prepare_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: test
          fetch-depth: 0

      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

  # upload_assets:
  #   needs: create_release
  #   strategy:
  #     matrix:
  #       include:
  #         - target: x86_64-unknown-linux-gnu
  #           os: ubuntu-latest
  #         - target: x86_64-apple-darwin
  #           os: macos-13
  #         - target: x86_64-pc-windows-msvc
  #           os: windows-latest
  #         - target: aarch64-unknown-linux-gnu
  #           os: ubuntu-24.04-arm
  #         - target: aarch64-apple-darwin
  #           os: macos-latest
  #
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v5
  #       with:
  #         ref: test
  #         fetch-depth: 0
  #
  #     - uses: taiki-e/upload-rust-binary-action@v1
  #       with:
  #         bin: sketch
  #         target: ${{ matrix.target }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
